// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gordon.NetParameter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gordon.NetParameter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gordon {

namespace {

const ::google::protobuf::Descriptor* LayerDictionary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LayerDictionary_reflection_ = NULL;
const ::google::protobuf::Descriptor* LayerDictionary_ParamBlob_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LayerDictionary_ParamBlob_reflection_ = NULL;
const ::google::protobuf::Descriptor* LayerDictionary_ParamBlob_ParamValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LayerDictionary_ParamBlob_ParamValue_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LayerDictionary_BlobType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NetParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetParameter_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gordon_2eNetParameter_2eproto() {
  protobuf_AddDesc_gordon_2eNetParameter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gordon.NetParameter.proto");
  GOOGLE_CHECK(file != NULL);
  LayerDictionary_descriptor_ = file->message_type(0);
  static const int LayerDictionary_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary, blobs_),
  };
  LayerDictionary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LayerDictionary_descriptor_,
      LayerDictionary::default_instance_,
      LayerDictionary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LayerDictionary));
  LayerDictionary_ParamBlob_descriptor_ = LayerDictionary_descriptor_->nested_type(0);
  static const int LayerDictionary_ParamBlob_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, cube_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, cube_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, cube_ch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, lname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, param_val_),
  };
  LayerDictionary_ParamBlob_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LayerDictionary_ParamBlob_descriptor_,
      LayerDictionary_ParamBlob::default_instance_,
      LayerDictionary_ParamBlob_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LayerDictionary_ParamBlob));
  LayerDictionary_ParamBlob_ParamValue_descriptor_ = LayerDictionary_ParamBlob_descriptor_->nested_type(0);
  static const int LayerDictionary_ParamBlob_ParamValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob_ParamValue, val_),
  };
  LayerDictionary_ParamBlob_ParamValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LayerDictionary_ParamBlob_ParamValue_descriptor_,
      LayerDictionary_ParamBlob_ParamValue::default_instance_,
      LayerDictionary_ParamBlob_ParamValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob_ParamValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerDictionary_ParamBlob_ParamValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LayerDictionary_ParamBlob_ParamValue));
  LayerDictionary_BlobType_descriptor_ = LayerDictionary_descriptor_->enum_type(0);
  NetParameter_descriptor_ = file->message_type(1);
  static const int NetParameter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, dict_),
  };
  NetParameter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NetParameter_descriptor_,
      NetParameter::default_instance_,
      NetParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NetParameter));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gordon_2eNetParameter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LayerDictionary_descriptor_, &LayerDictionary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LayerDictionary_ParamBlob_descriptor_, &LayerDictionary_ParamBlob::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LayerDictionary_ParamBlob_ParamValue_descriptor_, &LayerDictionary_ParamBlob_ParamValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NetParameter_descriptor_, &NetParameter::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gordon_2eNetParameter_2eproto() {
  delete LayerDictionary::default_instance_;
  delete LayerDictionary_reflection_;
  delete LayerDictionary_ParamBlob::default_instance_;
  delete LayerDictionary_ParamBlob_reflection_;
  delete LayerDictionary_ParamBlob_ParamValue::default_instance_;
  delete LayerDictionary_ParamBlob_ParamValue_reflection_;
  delete NetParameter::default_instance_;
  delete NetParameter_reflection_;
}

void protobuf_AddDesc_gordon_2eNetParameter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031gordon.NetParameter.proto\022\006gordon\"\314\002\n\017"
    "LayerDictionary\0220\n\005blobs\030\001 \003(\0132!.gordon."
    "LayerDictionary.ParamBlob\032\344\001\n\tParamBlob\022"
    "\020\n\010cube_num\030\001 \002(\005\022\021\n\tcube_size\030\002 \002(\005\022\017\n\007"
    "cube_ch\030\003 \002(\005\022\r\n\005lname\030\004 \002(\t\0226\n\004type\030\005 \001"
    "(\0162 .gordon.LayerDictionary.BlobType:\006WE"
    "IGHT\022\?\n\tparam_val\030\006 \003(\0132,.gordon.LayerDi"
    "ctionary.ParamBlob.ParamValue\032\031\n\nParamVa"
    "lue\022\013\n\003val\030\001 \002(\001\" \n\010BlobType\022\n\n\006WEIGHT\020\000"
    "\022\010\n\004BIAS\020\001\"5\n\014NetParameter\022%\n\004dict\030\001 \003(\013"
    "2\027.gordon.LayerDictionary", 425);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gordon.NetParameter.proto", &protobuf_RegisterTypes);
  LayerDictionary::default_instance_ = new LayerDictionary();
  LayerDictionary_ParamBlob::default_instance_ = new LayerDictionary_ParamBlob();
  LayerDictionary_ParamBlob_ParamValue::default_instance_ = new LayerDictionary_ParamBlob_ParamValue();
  NetParameter::default_instance_ = new NetParameter();
  LayerDictionary::default_instance_->InitAsDefaultInstance();
  LayerDictionary_ParamBlob::default_instance_->InitAsDefaultInstance();
  LayerDictionary_ParamBlob_ParamValue::default_instance_->InitAsDefaultInstance();
  NetParameter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gordon_2eNetParameter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gordon_2eNetParameter_2eproto {
  StaticDescriptorInitializer_gordon_2eNetParameter_2eproto() {
    protobuf_AddDesc_gordon_2eNetParameter_2eproto();
  }
} static_descriptor_initializer_gordon_2eNetParameter_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* LayerDictionary_BlobType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerDictionary_BlobType_descriptor_;
}
bool LayerDictionary_BlobType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LayerDictionary_BlobType LayerDictionary::WEIGHT;
const LayerDictionary_BlobType LayerDictionary::BIAS;
const LayerDictionary_BlobType LayerDictionary::BlobType_MIN;
const LayerDictionary_BlobType LayerDictionary::BlobType_MAX;
const int LayerDictionary::BlobType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int LayerDictionary_ParamBlob_ParamValue::kValFieldNumber;
#endif  // !_MSC_VER

LayerDictionary_ParamBlob_ParamValue::LayerDictionary_ParamBlob_ParamValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LayerDictionary_ParamBlob_ParamValue::InitAsDefaultInstance() {
}

LayerDictionary_ParamBlob_ParamValue::LayerDictionary_ParamBlob_ParamValue(const LayerDictionary_ParamBlob_ParamValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LayerDictionary_ParamBlob_ParamValue::SharedCtor() {
  _cached_size_ = 0;
  val_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LayerDictionary_ParamBlob_ParamValue::~LayerDictionary_ParamBlob_ParamValue() {
  SharedDtor();
}

void LayerDictionary_ParamBlob_ParamValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LayerDictionary_ParamBlob_ParamValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerDictionary_ParamBlob_ParamValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerDictionary_ParamBlob_ParamValue_descriptor_;
}

const LayerDictionary_ParamBlob_ParamValue& LayerDictionary_ParamBlob_ParamValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gordon_2eNetParameter_2eproto();
  return *default_instance_;
}

LayerDictionary_ParamBlob_ParamValue* LayerDictionary_ParamBlob_ParamValue::default_instance_ = NULL;

LayerDictionary_ParamBlob_ParamValue* LayerDictionary_ParamBlob_ParamValue::New() const {
  return new LayerDictionary_ParamBlob_ParamValue;
}

void LayerDictionary_ParamBlob_ParamValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    val_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LayerDictionary_ParamBlob_ParamValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double val = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &val_)));
          set_has_val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LayerDictionary_ParamBlob_ParamValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double val = 1;
  if (has_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->val(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LayerDictionary_ParamBlob_ParamValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double val = 1;
  if (has_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->val(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LayerDictionary_ParamBlob_ParamValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double val = 1;
    if (has_val()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerDictionary_ParamBlob_ParamValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LayerDictionary_ParamBlob_ParamValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LayerDictionary_ParamBlob_ParamValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LayerDictionary_ParamBlob_ParamValue::MergeFrom(const LayerDictionary_ParamBlob_ParamValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_val()) {
      set_val(from.val());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LayerDictionary_ParamBlob_ParamValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerDictionary_ParamBlob_ParamValue::CopyFrom(const LayerDictionary_ParamBlob_ParamValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerDictionary_ParamBlob_ParamValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LayerDictionary_ParamBlob_ParamValue::Swap(LayerDictionary_ParamBlob_ParamValue* other) {
  if (other != this) {
    std::swap(val_, other->val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LayerDictionary_ParamBlob_ParamValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LayerDictionary_ParamBlob_ParamValue_descriptor_;
  metadata.reflection = LayerDictionary_ParamBlob_ParamValue_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int LayerDictionary_ParamBlob::kCubeNumFieldNumber;
const int LayerDictionary_ParamBlob::kCubeSizeFieldNumber;
const int LayerDictionary_ParamBlob::kCubeChFieldNumber;
const int LayerDictionary_ParamBlob::kLnameFieldNumber;
const int LayerDictionary_ParamBlob::kTypeFieldNumber;
const int LayerDictionary_ParamBlob::kParamValFieldNumber;
#endif  // !_MSC_VER

LayerDictionary_ParamBlob::LayerDictionary_ParamBlob()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LayerDictionary_ParamBlob::InitAsDefaultInstance() {
}

LayerDictionary_ParamBlob::LayerDictionary_ParamBlob(const LayerDictionary_ParamBlob& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LayerDictionary_ParamBlob::SharedCtor() {
  _cached_size_ = 0;
  cube_num_ = 0;
  cube_size_ = 0;
  cube_ch_ = 0;
  lname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LayerDictionary_ParamBlob::~LayerDictionary_ParamBlob() {
  SharedDtor();
}

void LayerDictionary_ParamBlob::SharedDtor() {
  if (lname_ != &::google::protobuf::internal::kEmptyString) {
    delete lname_;
  }
  if (this != default_instance_) {
  }
}

void LayerDictionary_ParamBlob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerDictionary_ParamBlob::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerDictionary_ParamBlob_descriptor_;
}

const LayerDictionary_ParamBlob& LayerDictionary_ParamBlob::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gordon_2eNetParameter_2eproto();
  return *default_instance_;
}

LayerDictionary_ParamBlob* LayerDictionary_ParamBlob::default_instance_ = NULL;

LayerDictionary_ParamBlob* LayerDictionary_ParamBlob::New() const {
  return new LayerDictionary_ParamBlob;
}

void LayerDictionary_ParamBlob::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cube_num_ = 0;
    cube_size_ = 0;
    cube_ch_ = 0;
    if (has_lname()) {
      if (lname_ != &::google::protobuf::internal::kEmptyString) {
        lname_->clear();
      }
    }
    type_ = 0;
  }
  param_val_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LayerDictionary_ParamBlob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cube_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cube_num_)));
          set_has_cube_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cube_size;
        break;
      }

      // required int32 cube_size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cube_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cube_size_)));
          set_has_cube_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cube_ch;
        break;
      }

      // required int32 cube_ch = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cube_ch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cube_ch_)));
          set_has_cube_ch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_lname;
        break;
      }

      // required string lname = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lname().data(), this->lname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .gordon.LayerDictionary.BlobType type = 5 [default = WEIGHT];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gordon::LayerDictionary_BlobType_IsValid(value)) {
            set_type(static_cast< ::gordon::LayerDictionary_BlobType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_param_val;
        break;
      }

      // repeated .gordon.LayerDictionary.ParamBlob.ParamValue param_val = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param_val()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_param_val;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LayerDictionary_ParamBlob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 cube_num = 1;
  if (has_cube_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cube_num(), output);
  }

  // required int32 cube_size = 2;
  if (has_cube_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cube_size(), output);
  }

  // required int32 cube_ch = 3;
  if (has_cube_ch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cube_ch(), output);
  }

  // required string lname = 4;
  if (has_lname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lname().data(), this->lname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->lname(), output);
  }

  // optional .gordon.LayerDictionary.BlobType type = 5 [default = WEIGHT];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // repeated .gordon.LayerDictionary.ParamBlob.ParamValue param_val = 6;
  for (int i = 0; i < this->param_val_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->param_val(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LayerDictionary_ParamBlob::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cube_num = 1;
  if (has_cube_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cube_num(), target);
  }

  // required int32 cube_size = 2;
  if (has_cube_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cube_size(), target);
  }

  // required int32 cube_ch = 3;
  if (has_cube_ch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cube_ch(), target);
  }

  // required string lname = 4;
  if (has_lname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lname().data(), this->lname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lname(), target);
  }

  // optional .gordon.LayerDictionary.BlobType type = 5 [default = WEIGHT];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // repeated .gordon.LayerDictionary.ParamBlob.ParamValue param_val = 6;
  for (int i = 0; i < this->param_val_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->param_val(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LayerDictionary_ParamBlob::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cube_num = 1;
    if (has_cube_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cube_num());
    }

    // required int32 cube_size = 2;
    if (has_cube_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cube_size());
    }

    // required int32 cube_ch = 3;
    if (has_cube_ch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cube_ch());
    }

    // required string lname = 4;
    if (has_lname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lname());
    }

    // optional .gordon.LayerDictionary.BlobType type = 5 [default = WEIGHT];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // repeated .gordon.LayerDictionary.ParamBlob.ParamValue param_val = 6;
  total_size += 1 * this->param_val_size();
  for (int i = 0; i < this->param_val_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param_val(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerDictionary_ParamBlob::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LayerDictionary_ParamBlob* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LayerDictionary_ParamBlob*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LayerDictionary_ParamBlob::MergeFrom(const LayerDictionary_ParamBlob& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_val_.MergeFrom(from.param_val_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cube_num()) {
      set_cube_num(from.cube_num());
    }
    if (from.has_cube_size()) {
      set_cube_size(from.cube_size());
    }
    if (from.has_cube_ch()) {
      set_cube_ch(from.cube_ch());
    }
    if (from.has_lname()) {
      set_lname(from.lname());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LayerDictionary_ParamBlob::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerDictionary_ParamBlob::CopyFrom(const LayerDictionary_ParamBlob& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerDictionary_ParamBlob::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  for (int i = 0; i < param_val_size(); i++) {
    if (!this->param_val(i).IsInitialized()) return false;
  }
  return true;
}

void LayerDictionary_ParamBlob::Swap(LayerDictionary_ParamBlob* other) {
  if (other != this) {
    std::swap(cube_num_, other->cube_num_);
    std::swap(cube_size_, other->cube_size_);
    std::swap(cube_ch_, other->cube_ch_);
    std::swap(lname_, other->lname_);
    std::swap(type_, other->type_);
    param_val_.Swap(&other->param_val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LayerDictionary_ParamBlob::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LayerDictionary_ParamBlob_descriptor_;
  metadata.reflection = LayerDictionary_ParamBlob_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int LayerDictionary::kBlobsFieldNumber;
#endif  // !_MSC_VER

LayerDictionary::LayerDictionary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LayerDictionary::InitAsDefaultInstance() {
}

LayerDictionary::LayerDictionary(const LayerDictionary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LayerDictionary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LayerDictionary::~LayerDictionary() {
  SharedDtor();
}

void LayerDictionary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LayerDictionary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerDictionary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerDictionary_descriptor_;
}

const LayerDictionary& LayerDictionary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gordon_2eNetParameter_2eproto();
  return *default_instance_;
}

LayerDictionary* LayerDictionary::default_instance_ = NULL;

LayerDictionary* LayerDictionary::New() const {
  return new LayerDictionary;
}

void LayerDictionary::Clear() {
  blobs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LayerDictionary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gordon.LayerDictionary.ParamBlob blobs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blobs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_blobs;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LayerDictionary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .gordon.LayerDictionary.ParamBlob blobs = 1;
  for (int i = 0; i < this->blobs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blobs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LayerDictionary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .gordon.LayerDictionary.ParamBlob blobs = 1;
  for (int i = 0; i < this->blobs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->blobs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LayerDictionary::ByteSize() const {
  int total_size = 0;

  // repeated .gordon.LayerDictionary.ParamBlob blobs = 1;
  total_size += 1 * this->blobs_size();
  for (int i = 0; i < this->blobs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blobs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerDictionary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LayerDictionary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LayerDictionary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LayerDictionary::MergeFrom(const LayerDictionary& from) {
  GOOGLE_CHECK_NE(&from, this);
  blobs_.MergeFrom(from.blobs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LayerDictionary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerDictionary::CopyFrom(const LayerDictionary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerDictionary::IsInitialized() const {

  for (int i = 0; i < blobs_size(); i++) {
    if (!this->blobs(i).IsInitialized()) return false;
  }
  return true;
}

void LayerDictionary::Swap(LayerDictionary* other) {
  if (other != this) {
    blobs_.Swap(&other->blobs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LayerDictionary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LayerDictionary_descriptor_;
  metadata.reflection = LayerDictionary_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NetParameter::kDictFieldNumber;
#endif  // !_MSC_VER

NetParameter::NetParameter()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NetParameter::InitAsDefaultInstance() {
}

NetParameter::NetParameter(const NetParameter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NetParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NetParameter::~NetParameter() {
  SharedDtor();
}

void NetParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NetParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetParameter_descriptor_;
}

const NetParameter& NetParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gordon_2eNetParameter_2eproto();
  return *default_instance_;
}

NetParameter* NetParameter::default_instance_ = NULL;

NetParameter* NetParameter::New() const {
  return new NetParameter;
}

void NetParameter::Clear() {
  dict_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NetParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gordon.LayerDictionary dict = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dict:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dict()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dict;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NetParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .gordon.LayerDictionary dict = 1;
  for (int i = 0; i < this->dict_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dict(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NetParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .gordon.LayerDictionary dict = 1;
  for (int i = 0; i < this->dict_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dict(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NetParameter::ByteSize() const {
  int total_size = 0;

  // repeated .gordon.LayerDictionary dict = 1;
  total_size += 1 * this->dict_size();
  for (int i = 0; i < this->dict_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dict(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetParameter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NetParameter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NetParameter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetParameter::MergeFrom(const NetParameter& from) {
  GOOGLE_CHECK_NE(&from, this);
  dict_.MergeFrom(from.dict_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NetParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetParameter::CopyFrom(const NetParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetParameter::IsInitialized() const {

  for (int i = 0; i < dict_size(); i++) {
    if (!this->dict(i).IsInitialized()) return false;
  }
  return true;
}

void NetParameter::Swap(NetParameter* other) {
  if (other != this) {
    dict_.Swap(&other->dict_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NetParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetParameter_descriptor_;
  metadata.reflection = NetParameter_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gordon

// @@protoc_insertion_point(global_scope)
